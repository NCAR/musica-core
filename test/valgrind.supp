###############################################################
#
# OpenMP suppressions
#
###############################################################
{
   <openmp_thread_start>
   Memcheck:Param
   writev(vector[...])
   fun:writev
   fun:pmix_ptl_base_send_handler
   ...
   fun:start_thread
   fun:thread_start
}
{
   <openmp_clone>
   Memcheck:Param
   writev(vector[...])
   fun:writev
   fun:pmix_ptl_base_send_handler
   ...
   fun:start_thread
   fun:clone
}
{
   <omp_parallel>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:calloc
   fun:UnknownInlinedFun
   fun:allocate_dtv
   fun:_dl_allocate_tls
   ...
   fun:GOMP_parallel
   ...
   fun:MAIN__
   fun:main
}
###############################################################
#
# MPI suppressions
#
###############################################################
{
   <mpi_unpack>
   Memcheck:User
   ...
   fun:PMPI_Unpack
   fun:*MPI_UNPACK
   ...
   fun:MAIN__
   fun:main
}
{
   <mpi_init>
   Memcheck:Leak
   match-leak-kinds: definite
   fun:*alloc
   ...
   fun:PMPI_Init
   ...
}
{
   <ompi_init>
   Memcheck:Leak
   match-leak-kinds: definite
   fun:*alloc
   ...
   fun:ompi_mpi_init
   ...
}
{
   <mpi_init_param>
   Memcheck:Param
   setsockopt(optlen)
   ...
   fun:PMPI_Init
   ...
}
{
   <ompi_init_param>
   Memcheck:Param
   setsockopt(optlen)
   ...
   fun:ompi_mpi_init
   ...
}
{
   <mpi_init_param2>
   Memcheck:Param
   socketcall.getsockopt(optlen)
   ...
   fun:PMPI_Init
   ...
}
{
   <ompi_init_param2>
   Memcheck:Param
   socketcall.getsockopt(optlen)
   ...
   fun:ompi_mpi_init
   ...
}
{
   <mpi_init_param3>
   Memcheck:Param
   socketcall.getsockopt(optlen_out)
   ...
   fun:PMPI_Init
   ...
}
{
   <ompi_init_param3>
   Memcheck:Param
   socketcall.getsockopt(optlen_out)
   ...
   fun:ompi_mpi_init
   ...
}
{
   <mpi_finalize>
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   ...
   fun:orte_finalize
   fun:ompi_mpi_finalize
}
{
   <mpi_unpack>
   Memcheck:User
   ...
   fun:PMPI_Unpack
   fun:mpi_unpack
   ...
   fun:MAIN__
   fun:main
}
{
   <write_vector>
   Memcheck:Param
   writev(vector[...])
   ...
   fun:start_thread
   fun:thread_start
}
{
   <thread_start>
   Memcheck:Leak
   match-leak-kinds: definite
   fun:*alloc
   ...
   fun:start_thread
   fun:thread_start
}
{
   <thread_start_param>
   Memcheck:Param
   writev(vector[1])
   ...
   fun:start_thread
   fun:thread_start
}
{
   <ucs_rcache>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:*alloc
   ...
   fun:ucs_rcache_t_init
   fun:ucs_rcache_create
   ...
}
###############################################################
#
# Dynamic library linking ???
#
###############################################################
{
   <dl_worker>
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   fun:strdup
   ...
   fun:call_init
   fun:call_init
   fun:_dl_init
   fun:_dl_catch_exception
   fun:dl_open_worker
}
{
   <dl_error_run>
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   ...
   fun:dl_open_worker
   fun:_dl_catch_exception
   fun:_dl_open
   fun:dlopen_doit
   fun:_dl_catch_exception
   fun:_dl_catch_error
   fun:_dlerror_run
   ...
}
{
   <dl_catch_exceptions>
   Memcheck:Leak
   match-leak-kinds: definite
   fun:*alloc
   ...
   fun:call_init
   fun:call_init
   fun:_dl_init
   fun:_dl_catch_exception
   fun:dl_open_worker
   fun:_dl_catch_exception
   ...
}
###############################################################
#
# String
#
###############################################################
{
   <string_formatted_read>
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   ...
   fun:__musica_string_MOD_read_string_formatted
   ...
}
